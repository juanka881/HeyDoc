{
  "name": "sass-loader",
  "version": "0.4.0-beta.1",
  "description": "SASS loader for Webpack",
  "main": "index.js",
  "scripts": {
    "pretest": "node test/prepare.js",
    "test": "mocha -R spec"
  },
  "keywords": [
    "sass",
    "webpack",
    "loader"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/jtangelder/sass-loader.git"
  },
  "author": {
    "name": "J. Tangelder"
  },
  "license": "MIT",
  "dependencies": {
    "loader-utils": "^0.2.5",
    "node-sass": "^2.0.0-beta",
    "sass-graph": "^1.0.3"
  },
  "devDependencies": {
    "mocha": "^2.0.1",
    "raw-loader": "^0.5.1",
    "should": "^4.3.0",
    "webpack": "^1.4.0"
  },
  "readme": "# sass loader for [webpack](http://webpack.github.io/)\n\n\n## Usage\n\n[Documentation: Using loaders](http://webpack.github.io/docs/using-loaders.html)\n\n``` javascript\nvar css = require(\"!raw!sass!./file.scss\");\n// => returns compiled css code from file.scss, resolves imports\nvar css = require(\"!css!sass!./file.scss\");\n// => returns compiled css code from file.scss, resolves imports and url(...)s\n```\n\nUse in tandem with the [`style-loader`](https://github.com/webpack/style-loader) to add the css rules to your document:\n\n``` javascript\nrequire(\"!style!css!sass!./file.scss\");\n```\n\n### webpack config\n\nIt's recommended to adjust your `webpack.config` so `style!css!sass!` is applied automatically on all files ending on `.scss`:\n\n``` javascript\nmodule.exports = {\n  module: {\n    loaders: [\n      {\n        test: /\\.scss$/,\n        // Query parameters are passed to node-sass\n        loader: \"style!css!sass?outputStyle=expanded&\" +\n          \"includePaths[]=\" +\n            (path.resolve(__dirname, \"./bower_components\")) + \"&\" +\n          \"includePaths[]=\" +\n            (path.resolve(__dirname, \"./node_modules\"))\n      }\n    ]\n  }\n};\n```\n\nThen you only need to write: `require(\"./file.scss\")`. \n\nFor requiring `.sass` files, add `indentedSyntax=sass` as a loader option:\n\n``` javascript\nmodule.exports = {\n  module: {\n    loaders: [\n      {\n        test: /\\.scss$/,\n        // Passing indentedSyntax query param to node-sass\n        loader: \"style!css!sass?indentedSyntax=sass\"\n      }\n    ]\n  }\n};\n```\n\nSee [`node-sass`](https://github.com/andrew/node-sass) for the available options.\n\n## Install\n\n`npm install sass-loader`\n\n## Caveats\n\nCurrently the sass-loader does not follow all of the webpack loader guidelines. The general problem is that the entry scss-file is passed to [node-sass](https://github.com/sass/node-sass) which does pretty much the rest. Thus `@import` statements inside your scss-files cannot be resolved by webpack's resolver. However, there is an [issue for that missing feature in libsass](https://github.com/sass/libsass/issues/21).\n\n## License\n\nMIT (http://www.opensource.org/licenses/mit-license.php)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/jtangelder/sass-loader/issues"
  },
  "homepage": "https://github.com/jtangelder/sass-loader",
  "_id": "sass-loader@0.4.0-beta.1",
  "dist": {
    "shasum": "cffc42ee2dafaab013dae86a5b54f3dd5e1a8506"
  },
  "_from": "sass-loader@",
  "_resolved": "https://registry.npmjs.org/sass-loader/-/sass-loader-0.4.0-beta.1.tgz"
}
